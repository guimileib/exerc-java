1- Para clareza do código, modularização e reutilização.
2- É uma declaração de uma função que omite o corpo mas especifica o seu nome, tipos de argumentos e tipo de retorno.
3- Variável global -> se não estiver contida na função
Variável local -> se estiver contida dentro da função
4- Procedimento é uma função que não tem retorno, enquanto a função sempre possui retorno
5- Especificador de_tipo nome_da_função(parâmetros...){
Corpo da função
6- Passamos todo o endereço do argumento para o parâmetro. Devido a isto, qualquer alteração feita no parâmetro afeta a variável usada para chamar a função, pois dentro da função é usado o endereço real do argumento para acessá-lo na hora da chamada da função.
ex: int multiplica(int n1, int n2){
    int res;
    res = n1 * n2;
    return res;
}
7- Permite usar dentro de uma função uma cópia do valor de uma variável, porém não permite alterar o valor da variável original
8- O endereço de um argumento é passado para o parâmetro da função  e qualquer alteração do valor dentro da função afeta o valor original do argumento.
9- Porque as variáveis globais sao acessíveis a partir de qualquer parte do programa, incluindo dentro de qualquer funçao presente.
[19:36]
10-#include <stdio.h>


int soma(int x, int y){
    int z;
    z=x+y;
    return (z);
}

int subtracao(int x, int y){
    int z;
    z=x-y;
    return (z);
}


int mult(int x, int y){
    int z;
    z=(x*y);
    return (z);
}


int divisao(int x, int y){
    int z;
    z=x/y;
    return (z);
}


int main(){
    int x,y,z,i;
    printf("digite dois números na tela:\n");
    scanf("%d %d",&x,&y);
    printf("\ndigite 1 para somar eles\ndigite 2 para subitrair eles\ndigite 3 para multiplica-los\ndigite 4 para dividi-los\n\n");
    scanf("%d",&i);
        switch(i){
            case 1:
            z=soma(x,y);
            break;
            case 2:
            z=subtracao(x,y);
            break;
            case 3:
            z=mult(x,y);
            break;
            case 4:
            z=divisao(x,y);
            break;
    }
    printf("\no resultado é:\n%d",z); 
    return 0;
}11#include <stdio.h>

    int CalculaMaiorNumero(int v1, int v2, int v3);

    int main(){
    int n1, n2, n3;
    int maior;
    printf("Digite três valores:\n");
    scanf("%d %d %d", &n1, &n2, &n3);
    maior = CalculaMaiorNumero(n1, n2, n3);
    printf("O maior numero é %d", maior);
}

    int CalculaMaiorNumero(int v1, int v2, int v3){
    int res;
    if(v1>=v2 && v1>=v3){
        res = v1;
   }
   if(v2>=v1 && v2>=v3){
        res = v2;
   }
   if(v3>=v1 && v3>=v2){
        res = v3;
   }
        return res;
}
